{
	"info": {
		"_postman_id": "f5c0f797-ce0b-4671-aa1d-1aaabc3b6a9b",
		"name": "Mini Assignment1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DELETE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is json\", function () {\r",
							"\r",
							"    pm.response.to.have.jsonBody;\r",
							"\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							" pm.test(\"Status code is 200\", function () {\r",
							"\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is json\", function () {\r",
							"\r",
							"    pm.response.to.have.jsonBody;\r",
							"\r",
							"});\r",
							" \r",
							" \r",
							" let Response = pm.response.json();\r",
							"console.log(Responce.name);\r",
							"pm.test(\"verified name and job\",function(){\r",
							"for(let i=0;i<Response.length;i++){\r",
							"pm.expect(Response.name).to.eql(\"Arun\");\r",
							"pm.expect(Response.job).to.eql(\"Manager\");\r",
							"\r",
							" }\r",
							"\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Arun\"\r\n    \"job\": \"Manager\"\r\n}"
				},
				"url": {
					"raw": "https://reqres.in/api/users/",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "POST",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {   \r",
							"     pm.response.to.have.status(200);});\r",
							"    pm.test(\"Response time is less than 400ms\", function ()\r",
							"     {  \r",
							"          pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"        });\r",
							"        pm.test(\"Body is correct\", function ()\r",
							"         {    pm.response.to.have.jsonBody;\r",
							"        });\r",
							"        pm.test(\"verify successful creation of data\",function(){    var Response = pm.response.json();    \r",
							"        });\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n    \"name\":{{name}},\r\n\r\n    \"job\":{{job}}\r\n\r\n}"
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let Response = pm.response.json();\r",
							"\r",
							"pm.test(\"User with 'id' 40 has 'userId'=4\",function()\r",
							"\r",
							"{\r",
							"\r",
							"let userId=4;\r",
							"\r",
							" for(let i=0;i<Response.length;i++)\r",
							"\r",
							" {\r",
							"\r",
							"     if(Response[i].id==40)\r",
							"\r",
							"        {\r",
							"\r",
							"            pm.expect(Response[i].userId).to.eql(userId);\r",
							"\r",
							"        }\r",
							"\r",
							"    }\r",
							"\r",
							"});\r",
							"\r",
							"//scenario B\r",
							"\r",
							"pm.test(\"Every user contains 'title' and its type is String\",function()\r",
							"\r",
							"{\r",
							"\r",
							"for(let j=0;j<Response.length;j++)\r",
							"\r",
							"{\r",
							"\r",
							"    let type=Response[j].title\r",
							"\r",
							"    pm.expect(typeof(type)).to.eql(\"string\")\r",
							"\r",
							"}\r",
							"\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "domain_name",
			"value": "https://reqres.in"
		}
	]
}